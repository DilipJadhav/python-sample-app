---
name: CI-CD GKE Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore: .github/**
  pull_request:
    branches:
      - master
    paths-ignore: .github/**  
env:
  PROJECT_ID: absolute-cache-468112-e2
  REGION: asia-south1
  ZONE: asia-south1-a
  CLUSTER_NAME: my-gke-cluster
  IMAGE_NAME: gcr.io/absolute-cache-468112-e2/python-app
  
jobs:
  infra-deploy:
    name: Terraform Apply GKE
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.5

    - name: Terraform Init
      run: terraform init
      working-directory: ./gcp-infra
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_TERRAFORM_GKE }}
      

    - name: Terraform plan
      run: terraform plan
      working-directory: ./gcp-infra
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_TERRAFORM_GKE }}


    - name: Terraform Apply
      run: terraform apply -auto-approve
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_TERRAFORM_GKE }}
      working-directory: ./gcp-infra  


  build_docker_image:
    name: Build and Deploy to GKE
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Authenticate to GCR
      uses: google-github-actions/auth@v1
      with:
       credentials_json: ${{ secrets.GOOGLE_TERRAFORM_GKE }}  

    - name: Build Docker image
      run: |
        docker build -t $IMAGE_NAME:${{ github.sha }} .
        docker push $IMAGE_NAME:${{ github.sha }}

  deploy_in_k8s: 
    name: Update Kubernetes Deployment
    runs-on: ubuntu-latest
    needs: build_docker_image
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure GCP Credentials
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GOOGLE_TERRAFORM_GKE }}

    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v1
      with:
        cluster_name: ${{ env.CLUSTER_NAME }}
        location: ${{ env.ZONE }}

    - name: k8s deployment
      run: |
          cd manifests
          kubectl apply -f deployment.yaml -n default
          kubectl rollout status deployment/python-app
